/////////////////////////////////////////DAY15///////////////////////////////////////////////
▣ Set 인터페이스
	- 집합의 개념
	- 인덱스 정보를 포함하고 있지 않음( 순서가 없으며, 중복되지 않은 객체를 저장)
	- 중복저장 불가능
		주민등록번호, 사번, 주문번호, 아이디,...
	-  null 값도 한 개만 포함
	
	- HashSet 클래스, TreeSet 클래스

1. HashSet 
	- 입력 순서와 출력 순서는 동일하지 않을 수 있음
	- 중복허용하지 않는 것을 검사(hashCode(), equals()를 재정의)

	
		hashCode()   -> 같다 -----> equals() --> true   ===> 동일객체
		  다르다                             		          ====> 다른객체
					false                  ===> 다른객체



package collection;

import java.util.HashSet;
import java.util.Set;

public class HashSetExam {

	public static void main(String[] args) {
		Set<String> hashSet = new HashSet<String>();
		
		hashSet.add("홍길동");
		hashSet.add(new String("박자바"));
		hashSet.add(new String("한바다"));
		hashSet.add(new String("최하늘"));
		
		System.out.println(hashSet);
	}

}
}
=============================
2. TreeSet
	- 입력한 순서와 관계없이 크기순으로 출력(오름차순)
	- Set의 기본 기능 + 검색/정렬 기능 추가
	- 저장 데이터는 반드시 대소비교가 가능해야함

3.    크기 비교가 불가능한 경우 Comparable 인터페이스를 구현 
 	CampareTo(T t)를 이용해서 크기 비교

	비교하려는 필드가 매개변수 t보다 큰 경우 : 1 리턴	
	비교하려는 필드가 매개변수 t와 같은 경우 :  0 리턴	
	비교하려는 필드가 매개변수 t와 같은 경우 :  -1 리턴


===========================
▣ Map 계열 컬렉션 클래스
	- 주로 검색용 자료구조
	- Key와 Value의 쌍으로 구성
	- Key는 변경 불가, Value - 변경가능
	- 인덱스가 없으며, 키와 값만 있음
	- 구현클래스 : HashMap, HashTable, TreeMap
1. Map<K, V>
   put : map추가
  containsKey : 주어진 키가 있는지 여부 확인
  교재 740 페이지 참조

=====
<점수관리>
HashMap에 아이디와 점수가 저장되어 있고
평균점수를 출력하고
최고점수와 최고점수를 받은 아이디를 출력



===========================
▣ IO 기반 입출력
	- I : input => 파일의 데이터를 '읽는다'
		     키보드로부터 데이터를 '읽는다'
		    네트워크상의 데이터를 '읽는다'

	- O : output => 쓴다, 출력, 전송

	- 스트림 : 연속된 데이터의 단방향 흐름을 추상화
		데이터 소스와 상관없이 적용할 수 있어 매우 효과적
		예) 네트워크와 통신하는 데이터 흐름
		    키보드로부터 프로그램으로 읽어오는 것

1. 입출력 스트림의 특징
	- 선입선출 구조라서 순차적으로 흘러가고 순차적으로 접근
	- 입출력 스트림은 객체
	- 출력 스트림과 입력 스트림을 연결해서 파이프라인 구성 가능
	- 지연 가능 => 프로그램에 연결한 출력 스트림에 데이터가 가득 차면
	   프로그램을 더 이상 출력할 수 없어 빈 공간이 생길 때까지 지연 됨
	    데이터 소스에 연결한 입력 스트림도 가득 차면 프로그램이 데이터를 
	    처리해서 빈 공간이 생길 때까지 스트림이 지연

2. 스트림 클래스
	1) 바이트 기반 스트림 : InputStream, OutputStreeam (1byte 단위)
		그림, 동영상(멀티미디어), 문자 등 모든 종류의 데이터를 받고 보낼 수 있음

	2) 문자 기반 스트림 : Rader,  Writer(2Byte 단위)
		문자(문자열)만 받고 보낼 수 있도록 특화(주로 문자열에 사용)

3. InputStream
	- InputStream(추상) 클래스를 이용해서 객체를 생성 또는 다른 클래스의 메서드에서 리턴되는 타입객체를 얻음
	- reae() 메서드를 이용해 데이터를 읽어옴


4. OutputStream
	- OutputStream 클래스를 이용해 객체를 생성 또는 다른 클래스의 메서드에서 리턴되는 타입객체를 이용해서 얻는다
	- write()메서드를 이용해서 데이터를 내보냄


=================================
▣ 상속 안되는 클래스 만들기
     클래스명 앞에 final
	public final class String extends Object{ }

▣  싱글톤(Singleton)
	- 객체를 단 하나만 생성할 수 있는 것

	- 정적 필드
		private static  클래스명 singleton = new 클래스명();

	- 생성자 : 외부에서 호출할 수 없도록 private로 설정
	    private 클래스명(){}

	- 정적 메서드 
	   static 클래스명 getInstance(){
		return singleton;
	   }


	- 외부에서 사용
	  클래스명 참조변수명1 = 클래스명.getInstance();
	  클래스명 참조변수명2 = 클래스명.getInstance();
	  클래스명 참조변수명2 = 클래스명.getInstance();
		.....

======================
▣  API
	- 내부 API : jdk 설치시 제공해주는 기본  API
		- docs.oracle.com/javase

	- 외부API  : 다른 개발자가 만들어 놓은 패키지 및 클래스
		 JAR 파일로 배포,
		build path에 추가